---
const links = [
  {
    href: "/#",
    label: "Inicio",
  },
  {
    href: "/#info",
    label: "Info",
  },
  {
    href: "/#speakers",
    label: "Charlas",
  },
  {
    href: "/#ticket",
    label: "Ticket",
  },
  {
    href: "/#faq",
    label: "FAQ",
  },
];

interface Props {
  class?: string;
  childClass?: string;
}

const { class: classname, childClass, ...props } = Astro.props as Props;
---

<nav class={classname} {...props} data-links>
  <ul class={childClass}>
    {
      links.map(({ href, label }) => (
        <li>
          <a
            href={href}
            class="font-medium relative after:absolute after:-bottom-2 after:left-1/2 after:-translate-x-1/2 after:h-0.5 after:w-0 after:bg-current after:transition-all after:duration-300 hover:after:w-full"
          >
            {label}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<script>
  const nav = document.querySelector("nav[data-links]");
  if (nav) {
    const anchors = Array.from(nav.querySelectorAll("a[href]"));
    const activeClasses = ["after:w-full"];

    function updateActiveLink() {
      const hash = window.location.hash;
      const onHome = window.location.pathname === "/";
      anchors.forEach((anchor) => {
        const href = anchor.getAttribute("href") || "";
        const [base, section] = href.split("#");
        const isHomeLink = href === "/" || href === "/#";
        
        const isActive = hash ? href === `/${hash}` : onHome && isHomeLink;
        activeClasses.forEach((cls) => anchor.classList.toggle(cls, isActive));
        anchor.setAttribute("aria-current", isActive ? "page" : "false");
      });
    }

    updateActiveLink();
    window.addEventListener("hashchange", updateActiveLink);
  }
</script>
