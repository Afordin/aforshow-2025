---
import Link from "@/components/common/Link.astro";
import "../styles/tailwind.css";
import Aptabase from "../components/Aptabase.astro";
---

<html lang="es">
  <head>
    <title>Sorteo del AforShow 2025</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
  </head>
  <body class="max-w-4xl mx-auto flex flex-col gap-16 py-16">
    <header class="w-full flex items-center justify-between">
      <h1 class="font-handlee">Aforshow 2025</h1>
      <Link href="https://discord.com/invite/comuafor" variant="primary"
        >Únete a la comunidad</Link
      >
    </header>
    <section class="w-full justify-center text-center flex flex-col gap-4">
      <h1 class="font-handlee text-6xl">Sorteo pack afordin</h1>
      <p>
        Escribe <strong>!piticlin</strong> en el chat para entrar en el sorteo
      </p>
      <div class="w-full grid grid-cols-3 gap-4">
        <label
          for="cap"
          class="bg-slate-50 has-checked:outline-2 rounded-lg has-checked:outline-cs-primary flex h-full flex-col items-center justify-center gap-2 w-full py-4"
        >
          <img
            src="/imgs/cap.webp"
            aria-hidden="true"
            loading="lazy"
            decoding="async"
            alt="Gorra Afordin"
            width="78"
            height="78"
          />
          <input
            type="radio"
            class="hidden"
            id="cap"
            name="radio"
            value="cap"
            checked
          />
          <p>Gorra Afordin</p>
        </label>

        <label
          for="shirt"
          class="bg-slate-50 has-checked:outline-2 rounded-lg has-checked:outline-cs-primary flex h-full flex-col items-center justify-center gap-2 w-full py-4"
        >
          <img
            src="/imgs/shirt.webp"
            aria-hidden="true"
            loading="lazy"
            decoding="async"
            alt="Gorra Afordin"
            width="78"
            height="78"
          />
          <input
            type="radio"
            class="hidden"
            id="shirt"
            name="radio"
            value="shirt"
          />
          <p>Camiseta Afordin</p>
        </label>

        <label
          for="pack"
          class="bg-slate-50 has-checked:outline-2 rounded-lg has-checked:outline-cs-primary flex h-full flex-col items-center justify-center gap-2 w-full py-4"
        >
          <img
            src="/imgs/pack-afordin.webp"
            aria-hidden="true"
            loading="lazy"
            decoding="async"
            alt="Gorra Afordin"
            width="78"
            height="78"
          />
          <input
            type="radio"
            class="hidden"
            id="pack"
            name="radio"
            value="pack"
          />
          <p>Pack Gorra + Camiseta Afordin</p>
        </label>
      </div>
    </section>

    <section class="grid grid-cols-2 gap-4 w-full">
      <article>
        <h1 class="font-bold">Participantes</h1>
        <ul class="gonzaloEsMiPastor"></ul>
      </article>
      <article>
        <p>
          <span class="timer">30 </span>
          Segundos
        </p>
        <button class="initTimer">¡Iniciar!</button>
        <button class="resetTimer">¡Resetear!</button>
      </article>
    </section>
  </body>
  <Aptabase />
</html>

<script>
  import { client } from "mtmi";

  client.connect({ channels: ["afor_digital"] });

  const users: string[] = [];
  const listUsers = document.querySelector(".gonzaloEsMiPastor");

  client.on(
    "message",
    ({
      username,
      channel,
      message,
    }: {
      username: string;
      channel: string;
      message: string;
    }) => {
      console.log(`${channel} [${username}]: ${message}`);

      if (
        message.trim().toLowerCase() == "!piticlin" &&
        !users.includes(username)
      ) {
        users.push(username);

        const newUser = document.createElement("li");
        newUser.textContent = `${username}`;
        listUsers?.appendChild(newUser);
      }

      console.log(users);
    }
  );
</script>

<script>
  const TIMER_SECONDS = 30;
  let counter = TIMER_SECONDS;
  const $timer = document.querySelector(".timer");

  document.querySelector(".initTimer")?.addEventListener("click", () => {
    startTimer();
  });

  let interval: ReturnType<typeof setInterval>;

  const startTimer = () => {
    interval = setInterval(() => {
      console.log(counter);
      counter--;

      if (!$timer) return;
      $timer.textContent = counter.toString();

      if (counter <= 0) {
        clearInterval(interval);
        console.log("Ding!");
      }
    }, 1000);
  };

  document.querySelector(".resetTimer")?.addEventListener("click", () => {
    resetTimer();
  });

  const resetTimer = () => {
    clearInterval(interval);
    counter = TIMER_SECONDS;

    if (!$timer) return;
    $timer.textContent = counter.toString();
  };
</script>
